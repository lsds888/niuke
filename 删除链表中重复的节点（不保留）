
在一个排序的链表中，存在重复的结点，请删除该链表中重复的结点，重复的结点不保留，返回链表头指针。
例如，链表1->2->3->3->4->4->5 处理后为 1->2->5


/*
struct ListNode {
    int val;
    struct ListNode *next;
    ListNode(int x) :
        val(x), next(NULL) {
    }
};
*/
class Solution {
public:
    ListNode* deleteDuplication(ListNode* pHead)
    {
        if(pHead==NULL){
            return NULL;
        }
        ListNode* p1=pHead;//当前处理的节点
        ListNode* p2=NULL;//最晚访问的不重复节点
        ListNode* p3=NULL;//指向当前处理结点后面结点
        while(p1){
            if(p1->next&&p1->next->val==p1->val){
                p3=p1->next;
                while(p3&&p3->next&&p3->next->val==p1->val){
                    p3=p3->next;
                }
                if(p1==pHead){
                    pHead=p3->next;
                }else{
                    p2->next=p3->next;
                }
                p1=p3->next;
            }else{
                p2=p1;
                p1=p1->next;
            }
        }
        return pHead;
    }
};
