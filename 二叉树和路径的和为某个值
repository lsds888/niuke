输入一颗二叉树的跟节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。
(注意: 在返回值的list中，数组长度大的数组靠前)



/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    void helper(vector<int> vec,vector<vector<int>> &res,TreeNode* root,int sum){
        if(root==NULL)
            return ;
        vec.push_back(root->val);
        if(root->val==sum&&root->left==NULL&&root->right==NULL){
            res.push_back(vec);
        }
        helper(vec,res,root->left,sum-root->val);
        helper(vec,res,root->right,sum-root->val);
    }
    vector<vector<int> > FindPath(TreeNode* root,int expectNumber) {
        vector<int> vec;
        vector<vector<int>> res;
        helper(vec,res,root,expectNumber);
        return res;
    }
};
