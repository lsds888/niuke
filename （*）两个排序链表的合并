输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。


struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};
class Solution {
public:

方法一：递归
    ListNode* Merge(ListNode* pHead1, ListNode* pHead2){
        if(pHead1==NULL)
            return pHead2;
        if(pHead2==NULL)
            return pHead1;
        if(pHead1->val>pHead2->val){
            pHead2->next=Merge(pHead1,pHead2->next);
            return pHead2;
        }else
            pHead1->next= Merge(pHead1->next,pHead2);
        return pHead1;
    }
    


方法二：
    ListNode* Merge(ListNode* pHead1, ListNode* pHead2){
        ListNode* p=new ListNode(-1);
        p->next=NULL;
        ListNode* root=p;
        while(pHead1&&pHead2){
            if(pHead1->val>pHead2->val){
                p->next=pHead2;
                p=pHead2;
                pHead2=pHead2->next;
            }else{
                p->next=pHead1;
                p=pHead1;
                pHead1=pHead1->next;
            }
        }
        if(pHead1){
            p->next=pHead1;
        }
        if(pHead2){
            p->next=pHead2;
        }
        return root->next;
    }
};







