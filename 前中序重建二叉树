
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* reConstructBinaryTree(vector<int> pre,vector<int> vin) {
        int lv=vin.size();
        if(lv==0)
            return NULL;
        vector<int> pre_left,pre_right,vin_left,vin_right;
        TreeNode* root=new TreeNode(pre[0]);
        int i;
        for(i=0;i<lv;i++){
            if(vin[i]==pre[0])
                break;
        }
        for(int j=0;j<i;j++){
            pre_left.push_back(pre[j+1]);
            vin_left.push_back(vin[j]);
        }
        for(int j=i+1;j<lv;j++){
            pre_right.push_back(pre[j]);
            vin_right.push_back(vin[j]);
        }
        root->left=reConstructBinaryTree(pre_left,vin_left);
        root->right=reConstructBinaryTree(pre_right,vin_right);
        return root;
    }
};




